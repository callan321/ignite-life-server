services:
  api:
    build:
      context: .
      dockerfile: IgniteLifeApi/Dockerfile
    environment:
      ASPNETCORE_URLS: "http://+:8080"
      ConnectionStrings__DefaultConnection: "Host=test_db;Port=5432;Database=testdb;Username=postgres;Password=postgres"
    ports:
      - "8080:8080"
      
  test_db:
    image: postgres:17-alpine
    container_name: test_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"] 
      interval: 1s
      timeout: 1s
      retries: 30
      start_period: 1s

  tests:
    build:
      context: .
      dockerfile: IgniteLifeApi.Tests/Dockerfile.tests
    environment:
      ConnectionStrings__DefaultConnection: "Host=${DB_HOST};Port=${DB_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
    depends_on:
      test_db:
        condition: service_healthy
